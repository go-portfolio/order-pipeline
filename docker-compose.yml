services:
  # Zookeeper — нужен Kafka
  zookeeper:
    image: bitnami/zookeeper:3
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - order-pipeline-net     

  # Kafka брокер
  kafka:
    image: bitnami/kafka:3
    container_name: kafka
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - order-pipeline-net    

  # Redis
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - order-pipeline-net  

  # orderreceiver (gRPC-сервис)
  orderreceiver:
    container_name: orderreceiver
    build:
      context: .
      dockerfile: build/orderreceiver/Dockerfile
      args:
        MODE: prod   
    deploy:
      resources:
        limits:
          memory: 4g  
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=orders
      - ORDER_SERVICE_ADDR=0.0.0.0:50051
    depends_on:
      - kafka
    networks:
      - order-pipeline-net  
    ports:
      - "50051:50051"
    env_file:
      - .env

  # ordercache (gRPC-сервис)
  ordercache:
    container_name: ordercache
    build:
      context: .
      dockerfile: build/ordercache/Dockerfile
      args:
        MODE: prod 
    deploy:
      resources:
        limits:
          memory: 4g    
    environment:
      - REDIS_ADDR=redis:6379
      - CACHE_SERVICE_ADDR=0.0.0.0:50052
    depends_on:
      - redis
    networks:
      - order-pipeline-net  
    ports:
      - "50052:50052"
    env_file:
      - .env

  # orderprocessor (фоновый сервис, без портов)
  orderprocessor:
    container_name: orderprocessor
    build:
      context: .
      dockerfile: build/orderprocessor/Dockerfile
      args:
        MODE: prod 
    deploy:
      resources:
        limits:
          memory: 4g    
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=orders
      - REDIS_ADDR=redis:6379
    depends_on:
      - kafka
      - redis
    networks:
      - order-pipeline-net 
    env_file:
      - .env  

  tests:
    build:
      context: .
      dockerfile: build/tests/Dockerfile
      args:
        MODE: prod       
    volumes:
      - ./tests:/app/tests
    env_file:
      - .env    
    container_name: tests
    depends_on:
      - orderreceiver
      - ordercache
      - orderprocessor
      - kafka
      - redis
    networks:
      - order-pipeline-net
         

networks:
  order-pipeline-net:
    driver: bridge